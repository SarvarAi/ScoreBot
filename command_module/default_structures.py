from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, Message
import sqlite3

report_index = 0

about = '''
üßë‚Äçüéì–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç–æ–º –ò–ù–•–ê
ü•∑–°–æ–∑–¥–∞—Ç–µ–ª—å –∂–µ–ª–∞–µ—Ç –æ—Å—Ç–æ–≤–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º
üìà–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –¥–µ–Ω—å –æ—Ç–æ –¥–Ω—è, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
üì©–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é /report
üìù–ê–≤—Ç–æ—Ä —Å–æ–∑–¥–∞–ª —ç—Ç–æ–≥–æ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —É—á–∞—â–∏–º—Å—è —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –±–∞–ª–ª—ã –ø–æ –ª—é–±–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É.
üêç–ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ Python –∏ –Ω–∞ —Å–∞–º–æ–º –º–æ—â–Ω–æ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ aiogram
'''


class Database:
    # creating a text file with the whole information types 'text' and callbacks
    @staticmethod
    def start_data(message: Message):
        database = sqlite3.connect(r"D:\Python\inha_score\data_module\user_data\data_base.db")
        cursor = database.cursor()

        msg_id = message.message_id
        user_id = message.from_user.id
        bot_ask = message.from_user.is_bot
        first_name = message.from_user.first_name
        user_name = message.from_user.username
        langc = message.from_user.language_code
        tp = message.chat.type
        datetg = message.date

        cursor.execute('''
                INSERT INTO start(message_id, user_id, is_bot, first_name, username, language_code , type, date)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?);
                ''', (msg_id, user_id, bot_ask, first_name, user_name, langc, tp, datetg))

        print(f'user_id: {user_id}, data_base: start')
        database.commit()
        database.close()

    @staticmethod
    def report_data(message: Message):
        database = sqlite3.connect(r"D:\Python\inha_score\data_module\user_data\data_base.db")
        cursor = database.cursor()

        msg_id = message.message_id
        user_id = message.from_user.id
        bot_ask = message.from_user.is_bot
        first_name = message.from_user.first_name
        user_name = message.from_user.username
        langc = message.from_user.language_code
        tp = message.chat.type
        datetg = message.date
        text = message.text

        cursor.execute('''
        INSERT INTO reports(message_id, user_id, is_bot, first_name, username, language_code , type, date, text)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
        ''', (msg_id, user_id, bot_ask, first_name, user_name, langc, tp, datetg, text))

        print(f'user_id: {user_id}, data_base: reports')
        database.commit()
        database.close()


class Buttons:

    def faculty(self):
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        socie = KeyboardButton('üõ†SOCIE')
        sbl = KeyboardButton('üö´SBL')
        sol = KeyboardButton('üö´SOL')
        return markup.add(socie, sbl, sol)


class Messages:
    def __init__(self, message=None):
        self.message = message

    async def error_number(self):
        return await self.message.reply('üö´–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ üòï–í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑')

    async def error_char(self):
        return await self.message.reply('üö´–í—ã –≤–≤–µ–ª–∏ –Ωe –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ üòü–í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑')

    @staticmethod
    async def not_ready(message: Message):
        await message.answer(parse_mode='HTML', text=
        f'–ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –ø–æ–∫–∞ —á—Ç–æ –º—ã –Ω–µ –¥–æ—Ä–æ–±–æ—Ç–∞–ª–∏ <b>{message.text[1:]}</b> üò¢, –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–¥ —ç—Ç–∏–ºüßë‚Äçüíª')
